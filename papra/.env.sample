# The base URL of the application. Will override the client baseUrl and
# server baseUrl when set. Use this one over the client and server baseUrl
# when the server is serving the client assets (like in docker).
# APP_BASE_URL=

# The URL of the client, when using docker, prefer using the `APP_BASE_URL`
# environment variable instead.
# CLIENT_BASE_URL=http://localhost:1221

# The base URL of the server, when using docker, prefer using the
# `APP_BASE_URL` environment variable instead.
# SERVER_BASE_URL=http://localhost:1221

# A comma separated list of origins that are trusted to make requests to the
# server. The client baseUrl (CLIENT_BASE_URL) is automatically added by
# default, no need to add it to the list.
# TRUSTED_ORIGINS=

# The port to listen on when using node server.
# PORT=1221

# The maximum time in milliseconds for a route to complete before timing out.
# SERVER_API_ROUTES_TIMEOUT_MS=20000

# The CORS origin for the api server.
# SERVER_CORS_ORIGINS=http://localhost:3000

# Whether to serve the public directory (default as true when using docker).
# SERVER_SERVE_PUBLIC_DIR=false

# The URL of the database (default as "file:./app-data/db/db.sqlite" when
# using docker).
# DATABASE_URL=file:./db.sqlite

# The auth token for the database.
# DATABASE_AUTH_TOKEN=

# The encryption key for the database. If not provided, the database will not
# be encrypted. Use with caution as if lost, the data will be unrecoverable.
# DATABASE_ENCRYPTION_KEY=

# The retention period in days for deleted documents.
# DOCUMENTS_DELETED_DOCUMENTS_RETENTION_DAYS=30

# The languages codes to use for OCR, multiple languages can be specified by
# separating them with a comma. See
# https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016.
# DOCUMENTS_OCR_LANGUAGES=eng

# The maximum size in bytes for an uploaded file. Set to 0 to disable the
# limit and allow uploading documents of any size.
# DOCUMENT_STORAGE_MAX_UPLOAD_SIZE=10485760

# The driver to use for document storage, values can be one of: `filesystem`,
# `s3`, `in-memory`, `b2`, `azure-blob`.
# DOCUMENT_STORAGE_DRIVER=filesystem

# The root directory to store documents in (default as "./app-data/documents"
# when using docker).
# DOCUMENT_STORAGE_FILESYSTEM_ROOT=./local-documents

# The AWS access key ID for S3.
# DOCUMENT_STORAGE_S3_ACCESS_KEY_ID=

# The AWS secret access key for S3.
# DOCUMENT_STORAGE_S3_SECRET_ACCESS_KEY=

# The S3 bucket name.
# DOCUMENT_STORAGE_S3_BUCKET_NAME=

# The AWS region for S3.
# DOCUMENT_STORAGE_S3_REGION=auto

# The S3 endpoint.
# DOCUMENT_STORAGE_S3_ENDPOINT=

# The B2 application key ID.
# DOCUMENT_STORAGE_B2_APPLICATION_KEY_ID=

# The B2 application key.
# DOCUMENT_STORAGE_B2_APPLICATION_KEY=

# The B2 bucket name.
# DOCUMENT_STORAGE_B2_BUCKET_NAME=

# The B2 bucket ID.
# DOCUMENT_STORAGE_B2_BUCKET_ID=

# The Azure Blob Storage account name.
# DOCUMENT_STORAGE_AZURE_BLOB_ACCOUNT_NAME=

# The Azure Blob Storage account key.
# DOCUMENT_STORAGE_AZURE_BLOB_ACCOUNT_KEY=

# The Azure Blob Storage container name.
# DOCUMENT_STORAGE_AZURE_BLOB_CONTAINER_NAME=

# The secret for the auth.
# AUTH_SECRET=change-me-for-god-sake

# Whether registration is enabled.
# AUTH_IS_REGISTRATION_ENABLED=true

# Whether password reset is enabled.
# AUTH_IS_PASSWORD_RESET_ENABLED=true

# Whether email verification is required.
# AUTH_IS_EMAIL_VERIFICATION_REQUIRED=false

# Whether to show Papra legal links on the auth pages (terms of service,
# privacy policy), useless for self-hosted instances.
# AUTH_SHOW_LEGAL_LINKS=false

# Whether email/password authentication is enabled.
# AUTH_PROVIDERS_EMAIL_IS_ENABLED=true

# Whether Github OAuth is enabled.
# AUTH_PROVIDERS_GITHUB_IS_ENABLED=false

# The client id for Github OAuth.
# AUTH_PROVIDERS_GITHUB_CLIENT_ID=set-me

# The client secret for Github OAuth.
# AUTH_PROVIDERS_GITHUB_CLIENT_SECRET=set-me

# Whether Google OAuth is enabled.
# AUTH_PROVIDERS_GOOGLE_IS_ENABLED=false

# The client id for Google OAuth.
# AUTH_PROVIDERS_GOOGLE_CLIENT_ID=set-me

# The client secret for Google OAuth.
# AUTH_PROVIDERS_GOOGLE_CLIENT_SECRET=set-me

# The list of custom OAuth providers, as a JSON string, see
# https://www.better-auth.com/docs/plugins/generic-oauth#configuration for
# more details.
# AUTH_PROVIDERS_CUSTOMS=

# Whether ingestion folders are enabled.
# INGESTION_FOLDER_IS_ENABLED=false

# The root directory in which ingestion folders for each organization are
# stored.
# INGESTION_FOLDER_ROOT_PATH=./ingestion

# Whether to use polling for the ingestion folder watcher.
# INGESTION_FOLDER_WATCHER_USE_POLLING=false

# When polling is used, this is the interval at which the watcher checks for
# changes in the ingestion folder (in milliseconds).
# INGESTION_FOLDER_WATCHER_POLLING_INTERVAL_MS=2000

# The number of files that can be processed concurrently by the server.
# Increasing this can improve processing speed, but it will also increase CPU
# and memory usage.
# INGESTION_FOLDER_PROCESSING_CONCURRENCY=1

# The folder to move the file when the ingestion fails, the path is relative
# to the organization ingestion folder (<ingestion root>/<organization id>).
# INGESTION_FOLDER_ERROR_FOLDER_PATH=./ingestion-error

# The action done on the file after it has been ingested.
# INGESTION_FOLDER_POST_PROCESSING_STRATEGY=delete

# The folder to move the file when the post-processing strategy is "move",
# the path is relative to the organization ingestion folder (<ingestion
# root>/<organization id>).
# INGESTION_FOLDER_POST_PROCESSING_MOVE_FOLDER_PATH=./ingestion-done

# Comma separated list of patterns to ignore when watching the ingestion
# folder. Note that if you update this variable, it'll override the default
# patterns, not merge them. Regarding the format and syntax, please refer to
# the [picomatch
# documentation](https://github.com/micromatch/picomatch/blob/bf6a33bd3db990edfbfd20b3b160eed926cd07dd/README.md#globbing-features).
# INGESTION_FOLDER_IGNORED_PATTERNS=**/.DS_Store,**/.env,**/desktop.ini,**/Thumbs.db,**/.git/**,**/.idea/**,**/.vscode/**,**/node_modules/**

# Whether the task to hard delete expired "soft deleted" documents is
# enabled.
# DOCUMENTS_HARD_DELETE_EXPIRED_DOCUMENTS_ENABLED=true

# The cron schedule for the task to hard delete expired "soft deleted"
# documents.
# DOCUMENTS_HARD_DELETE_EXPIRED_DOCUMENTS_CRON=0 0 * * *

# Whether the task to hard delete expired "soft deleted" documents should run
# on startup.
# DOCUMENTS_HARD_DELETE_EXPIRED_DOCUMENTS_RUN_ON_STARTUP=true

# Whether the task to expire invitations is enabled.
# ORGANIZATIONS_EXPIRE_INVITATIONS_ENABLED=true

# The cron schedule for the task to expire invitations.
# ORGANIZATIONS_EXPIRE_INVITATIONS_CRON=0 0 * * *

# Whether the task to expire invitations should run on startup.
# ORGANIZATIONS_EXPIRE_INVITATIONS_RUN_ON_STARTUP=true

# Whether intake emails are enabled.
# INTAKE_EMAILS_IS_ENABLED=false

# The driver to use when generating email addresses for intake emails, value
# can be one of: `random-username`, `owlrelay`.
# INTAKE_EMAILS_DRIVER=random-username

# The secret to use when verifying webhooks.
# INTAKE_EMAILS_WEBHOOK_SECRET=change-me

# The domain to use when generating email addresses for intake emails when
# using the random username driver.
# INTAKE_EMAILS_EMAIL_GENERATION_DOMAIN=papra.email

# The API key used to interact with OwlRelay for the intake emails.
# OWLRELAY_API_KEY=change-me

# The webhook URL to use when generating email addresses for intake emails
# with OwlRelay, if not provided, the webhook will be inferred from the
# server URL.
# OWLRELAY_WEBHOOK_URL=

# The email address to send emails from.
# EMAILS_FROM_ADDRESS=Papra <auth@mail.papra.app>

# The driver to use when sending emails, value can be one of: `resend`,
# `logger`, `smtp`. Using `logger` will not send anything but log them
# instead.
# EMAILS_DRIVER=logger

# The API key for the Resend email service.
# RESEND_API_KEY=

# When using the logger email driver, the level to log emails at.
# LOGGER_EMAIL_DRIVER_LOG_LEVEL=info

# The host of the SMTP server.
# SMTP_HOST=

# The port of the SMTP server.
# SMTP_PORT=587

# The user of the SMTP server.
# SMTP_USER=

# The password of the SMTP server.
# SMTP_PASSWORD=

# Whether to use a secure connection to the SMTP server.
# SMTP_SECURE=false

# The raw configuration for the nodemailer SMTP client in JSON format for
# advanced use cases. If set, this will override all other config options.
# See https://nodemailer.com/smtp/ for more details.
# SMTP_JSON_CONFIG=

# The maximum number of organizations a standard user can have.
# MAX_ORGANIZATION_COUNT_PER_USER=10

# The number of days an invitation to an organization will be valid.
# ORGANIZATION_INVITATION_EXPIRATION_DELAY_DAYS=7

# The maximum number of invitations a user can send per day.
# MAX_USER_ORGANIZATIONS_INVITATIONS_PER_DAY=30

# Whether the free plan is unlimited, meaning it has no limits on the number
# of documents, tags, and organizations, basically always true for
# self-hosted instances.
# IS_FREE_PLAN_UNLIMITED=true

# The price id of the plus plan (useless for self-hosting).
# PLANS_PLUS_PLAN_PRICE_ID=change-me

# The price id of the family plan (useless for self-hosting).
# PLANS_FAMILY_PLAN_PRICE_ID=change-me

# The API secret key for the Stripe (useless for self-hosting).
# STRIPE_API_SECRET_KEY=change-me

# The secret for the Stripe webhook (useless for self-hosting).
# STRIPE_WEBHOOK_SECRET=change-me

# Whether to enable PostHog.
# POSTHOG_ENABLED=false

# The API key for PostHog.
# POSTHOG_API_KEY=set-me

# The host for PostHog.
# POSTHOG_HOST=https://eu.i.posthog.com